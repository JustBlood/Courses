services:
#                         ======================= DB ==============================
  courses_service_db:
    image: postgres
    restart: unless-stopped
    networks:
      - postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 242171e6a6d3b0701e83f72d33432a8e9fa11068
      POSTGRES_DB: courses_service # todo: volumes

  user_service_db:
    image: postgres
    restart: unless-stopped
    networks:
      - postgres
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 242171e6a6d3b0701e83f72d33432a8e9fa11068
      POSTGRES_DB: user_service # todo: volumes

  security_service_db:
    image: postgres
    restart: unless-stopped
    networks:
      - postgres
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 242171e6a6d3b0701e83f72d33432a8e9fa11068
      POSTGRES_DB: security_service # todo: volumes

#                         ======================= SERVICES ==============================

  courses_service:
    container_name: courses_service
    restart: always
    build: ./courses-service
    networks:
      - postgres
      - spring
    depends_on:
      - courses_service_db
    ports:
      - "8081:8081"

  user_service:
    container_name: user_service
    restart: always
    build: ./user-service
    networks:
      - postgres
      - spring
    depends_on:
      - user_service_db
    ports:
      - "8082:8082"

  security_service:
    container_name: security_service
    restart: always
    build: ./security-service
    networks:
      - postgres
      - spring
    depends_on:
      security_service_db:
        condition: service_healthy
    ports:
      - "8083:8083"

networks:
  postgres:
  spring:

