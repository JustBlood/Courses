buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.postgresql:postgresql:42.6.0")
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'org.jooq.jooq-codegen-gradle' version "3.19.3"
}

apply plugin: 'io.spring.dependency-management'

group = 'ru.just'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'jakarta.validation:jakarta.validation-api'
    implementation 'ru.just:dto-lib:0.0.1-SNAPSHOT'
    implementation 'org.jooq:jooq:3.19.3'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'redis.clients:jedis'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'com.auth0:java-jwt:4.4.0'

    runtimeOnly 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

jooq {
    version = '3.18.7'

    configuration {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = 'jdbc:postgresql://localhost:5434/users_service'
            user = 'postgres'
            password = '242171e6a6d3b0701e83f72d33432a8e9fa11068'
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated-sources/jooq'
        }
    }
}
