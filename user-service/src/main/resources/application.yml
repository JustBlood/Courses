spring:
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 20MB
  application:
    name: USERS-SERVICE
  datasource:
    url: jdbc:postgresql://${DB_CONTAINER:localhost:5432}/users_service
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:admin}
    driver-class-name: org.postgresql.Driver
  jooq:
    sql-dialect: postgres
  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog.xml
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    streams:
      replication-factor: 1
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: courses
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "ru.just.dtolib.kafka.*"
      enable-auto-commit: false
      auto-offset-reset: earliest
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
eureka:
  client:
    enabled: true
    service-url:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
server:
  port: 8082
topics:
  user-actions-topic: userActions
  user-update-topic: userUpdate
logging:
  level:
    org.apache.kafka: ERROR
    feign: DEBUG
    org.springframework.security: trace
    liquibase: debug

springdoc:
  api-docs:
    enabled: true
    path: /users-service/v1/api-docs
