spring:
  application:
    name: SECURITY-SERVICE
  datasource:
    url: jdbc:postgresql://${DB_CONTAINER:localhost}:5432/security_service
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:admin}
  jpa:
    hibernate:
      ddl-auto: validate
  flyway:
    enabled: true
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    streams:
      replication-factor: 1
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: courses
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: 'ru.just.dtolib.kafka.*'

springdoc:
  api-docs:
    enabled: true
    path: /security-service/v1/api-docs

eureka:
  client:
    enabled: true
    service-url:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}

server:
  http2:
    enabled: true
  port: 8083
jwt:
  access-ttl-in-seconds: 1800
  refresh-ttl-in-days: 20
  secret: c2d5e5016ba507644754f5591fb5a9f43643a017c84374d161d3642f13d727402933d85082ff75e0e791e18366f241ae36ba2d4d262eea2a3fd7131ff0b4a384

logging:
  level:
    org.springframework.security: trace

topics:
  user-actions-topic: userActions
